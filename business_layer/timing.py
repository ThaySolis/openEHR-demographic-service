from data_layer.time_measurement import Timed, NotTimed
from app_settings import USAGE_STATISTICS_MAX_SAMPLES, INCLUDE_USAGE_STATISTICS

CREATE_PATIENT_MEASUREMENT = "create_patient"
UPDATE_PATIENT_MEASUREMENT = "update_patient"
DELETE_PATIENT_MEASUREMENT = "delete_patient"
GET_PATIENT_MEASUREMENT = "get_patient"
GET_VERSIONED_PATIENT_MEASUREMENT = "get_versioned_patient"
GET_VERSIONED_PATIENT_REVISION_HISTORY_MEASUREMENT = "get_versioned_patient_revision_history"
GET_VERSIONED_PATIENT_VERSION_MEASUREMENT = "get_versioned_patient_version"
LIST_PATIENTS_MEASUREMENT = "list_patients"
GET_EHR_ID_FROM_PATIENT_MEASUREMENT = "get_ehr_id_from_patient"
SET_EHR_ID_FROM_PATIENT_MEASUREMENT = "set_ehr_id_from_patient"
GET_CONTRIBUTION_MEASUREMENT = "get_contribution"

ALL_MEASUREMENTS = [CREATE_PATIENT_MEASUREMENT, UPDATE_PATIENT_MEASUREMENT, DELETE_PATIENT_MEASUREMENT, GET_PATIENT_MEASUREMENT, GET_VERSIONED_PATIENT_MEASUREMENT, GET_VERSIONED_PATIENT_REVISION_HISTORY_MEASUREMENT, GET_VERSIONED_PATIENT_VERSION_MEASUREMENT, LIST_PATIENTS_MEASUREMENT, GET_EHR_ID_FROM_PATIENT_MEASUREMENT, SET_EHR_ID_FROM_PATIENT_MEASUREMENT, GET_CONTRIBUTION_MEASUREMENT]

if INCLUDE_USAGE_STATISTICS:
    timed = Timed(USAGE_STATISTICS_MAX_SAMPLES)
else:
    timed = NotTimed()
